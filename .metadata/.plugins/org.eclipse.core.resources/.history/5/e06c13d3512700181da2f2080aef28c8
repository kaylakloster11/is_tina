/* FreeRTOS_tiva_demo
 *
 * main.c
 *
 * Kayla Kloster
 */

//#include <ledtasks.h>
#include "main.h"
#include "FPS.h"
#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_ints.h"
#include "inc/hw_types.h"
#include "driverlib/debug.h"
#include "driverlib/fpu.h"
#include "driverlib/gpio.h"
#include "driverlib/interrupt.h"
#include "driverlib/pin_map.h"
#include "driverlib/rom.h"
#include "driverlib/rom_map.h"
#include "driverlib/sysctl.h"
#include "driverlib/timer.h"
#include "driverlib/uart.h"
#include "utils/uartstdio.h"
#include "UARTproj.h"

// TivaWare includes

// FreeRTOS includes
#include "FreeRTOSConfig.h"
#include "FreeRTOS.h"
#include "queue.h"
#include "task.h"
#include "event_groups.h"


// Demo Task declarations
/*void LED_Task1(void *pvParameters);
void LED_Task2(void *pvParameters); */
#define ENROLL_TASK     (1UL << 0UL)
#define CHECKID_TASK    (1UL << 1UL)
#define DELETEID_TASK   (1UL << 2UL)
#define DELETALL_TASK   (1UL << 3UL)

EventGroupHandle_t xUserInEvent;
// Main function
int main(void)
{
    ClockSRCFreq = MAP_SysCtlClockFreqSet((SYSCTL_XTAL_25MHZ | SYSCTL_OSC_MAIN |
                        SYSCTL_USE_PLL | SYSCTL_CFG_VCO_480), 120000000); /* Set clock source to be directly from crystal at 120 MHz */
    UART_CONFIG();
    TIMER_CONFIG();
    ROM_IntMasterEnable();

    xUserInEvent = xEventGroupCreate();

    xTaskCreate(FP_Task, (const portCHAR *)"Fingerprint Sensor",
             configMINIMAL_STACK_SIZE, NULL, 1, NULL);

    MENU_DISPLAY();

    Open();

    vTaskStartScheduler();
    MENU_DISPLAY();
    Open();

    for(;;);
    return 0;
}


void __error__(char *pcFilename, uint32_t ui32Line)
{
    // Place a breakpoint here to capture errors until logging routine is finished
    while (1)
    {
    }
}
